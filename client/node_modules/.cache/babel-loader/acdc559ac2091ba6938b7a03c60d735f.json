{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\rasha\\\\Desktop\\\\My work\\\\e-commerce-using-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CartActionTypes } from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.util\";\nimport { clearItemFromCart } from \"./cart.action\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:\\Users\\rasha\\Desktop\\My work\\e-commerce-using-reactjs\\src\\redux\\cart\\cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","clearItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM"],"mappings":";;;;;;AAAA,SAAQA,eAAR,QAA8B,cAA9B;AAEA,SAAQC,aAAR,EAAuBC,kBAAvB,QAAgD,aAAhD;AACA,SAASC,iBAAT,QAAkC,eAAlC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,eAAe,CAACW,kBAArB;AACI,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFnB;;AAIJ,SAAKL,eAAe,CAACY,QAArB;AACI,+BACOJ,KADP;AAEIF,QAAAA,SAAS,EAAEL,aAAa,CAACO,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF5B;;AAIJ,SAAKb,eAAe,CAACc,oBAArB;AACI,+BACON,KADP;AAEIF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAuBC,QAAQ,IAAGA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EAAjE;AAFf;;AAIJ,SAAKjB,eAAe,CAACkB,WAArB;AACI,+BACOV,KADP;AAEIF,QAAAA,SAAS,EAAEJ,kBAAkB,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFjC;;AAIJ;AAAU,aAAOL,KAAP;AArBd;AAuBH,CAxBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import {CartActionTypes} from \"./cart.types\"\r\n\r\nimport {addItemToCart, removeItemFromCart} from \"./cart.util\"\r\nimport { clearItemFromCart } from \"./cart.action\"\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN: \r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden\r\n            }\r\n        case CartActionTypes.ADD_ITEM: \r\n            return {\r\n                ...state,\r\n                cartItems: addItemToCart(state.cartItems, action.payload)\r\n            } \r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART: \r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(cartItem=> cartItem.id !== action.payload.id)\r\n            } \r\n        case CartActionTypes.REMOVE_ITEM: \r\n            return {\r\n                ...state,\r\n                cartItems: removeItemFromCart(state.cartItems, action.payload)\r\n            } \r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}