{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Rashad\\\\Desktop\\\\all-in-one\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\nconst middlewares = [logger];\nconst store = createStore(rootReducer, applyMiddleware(_objectSpread({}, middlewares)));\nexport default store;","map":{"version":3,"sources":["C:\\Users\\Rashad\\Desktop\\all-in-one\\src\\redux\\store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","middlewares","store"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAG,CAACF,MAAD,CAApB;AAEA,MAAMG,KAAK,GAAGL,WAAW,CAACG,WAAD,EAAcF,eAAe,mBAAKG,WAAL,EAA7B,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\r\n\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware({...middlewares}));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}