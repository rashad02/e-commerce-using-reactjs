{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Rashad\\\\Desktop\\\\all-in-one\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemsToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemsToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemsToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemsToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["C:\\Users\\Rashad\\Desktop\\all-in-one\\src\\redux\\cart\\cart.util.js"],"names":["addItemToCart","cartItems","cartItemsToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AACxD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EAA1D,CAAzB;;AAEA,MAAGH,gBAAH,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EAA/B,qBAAwCD,QAAxC;AAAkDG,MAAAA,QAAQ,EAAGH,QAAQ,CAACG,QAAT,GAAkB;AAA/E,SAAoFH,QADjF,CAAP;AAGH;;AACD,SAAO,CAAC,GAAGJ,SAAJ,oBAAmBC,cAAnB;AAAmCM,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACH,CATM","sourcesContent":["export const addItemToCart = (cartItems, cartItemsToAdd) => {\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemsToAdd.id);\r\n\r\n    if(existingCartItem) {\r\n        return cartItems.map(cartItem => \r\n            cartItem.id === cartItemsToAdd.id ? {...cartItem, quantity : cartItem.quantity+1} : cartItem \r\n        )\r\n    }\r\n    return [...cartItems, {...cartItemsToAdd, quantity: 1}]\r\n}"]},"metadata":{},"sourceType":"module"}